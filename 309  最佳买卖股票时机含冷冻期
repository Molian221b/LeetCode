class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        length = len(prices)
        if length < 2:
            return 0
        if length == 2:
            return max(0, prices[1]-prices[0])

        k = length//2
        count = k+1
        dp = [[0 for y in range(2)] for x in range(length)]
        # dp[第几天][买卖状态]

        dp[0][1] = -prices[0]
        dp[0][0] = 0
        dp[1][1] = max(dp[0][1], dp[0][0] - prices[1])
        dp[1][0] = max(dp[0][0], dp[0][1] + prices[1])

        max_profit = float("-inf")
        for i in range(2, length):
            
            dp[i][0] = max(dp[i-1][0], dp[i-1][1] + prices[i])
            dp[i][1] = max(dp[i-1][1], dp[i-2][0] - prices[i])
            
            max_profit = max(max_profit, dp[i][0], dp[i][1])

        return max_profit
