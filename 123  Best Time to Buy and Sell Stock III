class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        if not prices:
            return 0
        days = len(prices)
        dp = [[[0 for i in range(2)] for j in range(3)] for k in range(days)]
        res = 0
        dp[0][0][0] = 0
        dp[0][0][1] = -prices[0]
        dp[0][1][0] = -float('inf')
        dp[0][1][1] = -float('inf')
        for i in range(1, days):
            for j in range(3):
                if j == 0:
                    dp[i][j][0] = 0
                else:
                    dp[i][j][0] = max(dp[i-1][j][0], dp[i-1][j-1][1] + prices[i])
                dp[i][j][1] = max(dp[i-1][j][1], dp[i-1][j][0] - prices[i])
                res = max(res, dp[i][j][0])
        return res
