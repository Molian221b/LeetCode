# class Solution:
#     def maxProfit(self, prices: List[int]) -> int:
#         max_profit = 0
#         prices.append(0)
#         buy = 0
#         for i in range(1, len(prices)):
#             if prices[buy] < prices[i] and prices[i] > prices[i+1]:
#                 max_profit += prices[i] - prices[buy]
#                 buy = i+1
#             elif prices[buy] > prices[i]:
#                 buy = i
#         prices.pop()
#         return max_profit

# class Solution:
#     def maxProfit(self, prices: List[int]) -> int:
#         profit = 0
#         for i in range(1, len(prices)):
#             if prices[i] > prices[i-1]:
#                 temp = prices[i] - prices[i-1]
#                 profit += temp
#         return profit

# 大神写法
# class Solution:
#     def maxProfit(self, prices: List[int]) -> int:
#         return sum(b - a for a, b in zip(prices, prices[1:]) if b > a)
