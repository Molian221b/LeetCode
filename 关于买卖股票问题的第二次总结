# 最大的问题其实是关于dp究竟是什么含义，可以看出dp实际上是有约束条件的，必须先满足[买卖次数]才能才判断dp在当前时间的最大值
# 也就是说虽然dp代表的是dp[天数][买卖次数][买卖状态]的最大值，但这个数值实际上是max(dp[x][0][0],dp[x][1][0],dp[x][2][0]...)这样求出来的
# 也就是说其实会出现dp[x][2][0] < dp[x][1][0] 这种情况，原因就是第一句话所说，必须先满足买卖次数这个前提约束条件
# 还有一个要注意的问题是，这样穷举来找规律的方法必须满足prices列表长度（也就是天数）和穷举dp[x][][]时，x+1的长度要相等，不然就相当于没有考虑后面几天的情况
class Solution:
    def maxProfit(self, prices) -> int:
        print(["x00","x01","x10","x11","x20","x21","x30","x31"])
        print(stock)
        if not prices:
            return 0
        # dp代表的是 当前天数i，最大允许的买卖次数k下，并且处于当前买卖状态下的最大利润
        # dp[天数][买卖次数][买卖状态]
        l = len(prices)
        dp = [[[0 for i in range(2)] for j in range(4)] for k in range(l)]
        dp[0][0][0] = 0  # 第一天没买入的情况
        dp[0][0][1] = -prices[0]  # 第一天买入的情况
        dp[0][1][0] = -float('inf')  # 第一天卖出一次的情况，显然不会出现，所以是-inf
        dp[0][1][1] = -float('inf')  # 同上
        dp[0][2][0] = -float('inf')
        dp[0][2][1] = -float('inf')
        dp[0][3][0] = -float('inf')
        dp[0][3][1] = -float('inf')

        # print(dp[0][0][0],dp[0][0][1],dp[0][1][0],dp[0][1][1],dp[0][2][0],dp[0][2][1],dp[0][3][0],dp[0][3][1])
        print(dp[0][0][0],dp[0][1][0],dp[0][2][0],dp[0][3][0])  
        # print(dp[0][0][0], dp[0][1][0], dp[0][2][0], dp[0][3][0])
        print(max(dp[0][0][0], dp[0][1][0], dp[0][2][0], dp[0][3][0]))
        print('------------------------')

        dp[1][0][0] = 0
        dp[1][0][1] = max(dp[0][0][1], dp[0][0][0] - prices[1])
        dp[1][1][0] = max(dp[0][1][0], dp[0][0][1] + prices[1])
        dp[1][1][1] = max(dp[0][1][1], dp[0][1][0] - prices[1])
        dp[1][2][0] = max(dp[0][2][0], dp[0][1][1] + prices[1])
        dp[1][2][1] = max(dp[0][2][1], dp[0][2][0] - prices[1])
        dp[1][3][0] = max(dp[0][3][0], dp[0][2][1] + prices[1])
        dp[1][3][1] = max(dp[0][3][1], dp[0][3][0] - prices[1])
        # print(dp[1][0][0], dp[1][0][1], dp[1][1][0], dp[1][1][1], dp[1][2][0], dp[1][2][1], dp[1][3][0], dp[1][3][1])
        print(dp[1][0][0], dp[1][1][0], dp[1][2][0], dp[1][3][0])
        # print(dp[1][0][0], dp[1][1][0], dp[1][2][0], dp[1][3][0])
        print(max(dp[1][0][0], dp[1][1][0], dp[1][2][0], dp[1][3][0]))
        print('------------------------')
        dp[2][0][0] = 0
        dp[2][0][1] = max(dp[1][0][1], dp[1][0][0] - prices[2])
        dp[2][1][0] = max(dp[1][1][0], dp[1][0][1] + prices[2])
        dp[2][1][1] = max(dp[1][1][1], dp[1][1][0] - prices[2])
        dp[2][2][0] = max(dp[1][2][0], dp[1][1][1] + prices[2])
        dp[2][2][1] = max(dp[1][2][1], dp[1][2][0] - prices[2])
        dp[2][3][0] = max(dp[1][3][0], dp[1][2][1] + prices[2])
        dp[2][3][1] = max(dp[1][3][1], dp[1][3][0] - prices[2])
        # print(dp[2][0][0], dp[2][0][1], dp[2][1][0], dp[2][1][1], dp[2][2][0], dp[2][2][1], dp[2][3][0], dp[2][3][1])
        print(dp[2][0][0], dp[2][1][0], dp[2][2][0], dp[2][3][0])
        # print(dp[2][0][0], dp[2][1][0], dp[2][2][0], dp[2][3][0])
        print(max(dp[2][0][0], dp[2][1][0], dp[2][2][0], dp[2][3][0]))
        print('------------------------')
        dp[3][0][0] = 0
        dp[3][0][1] = max(dp[2][0][1], dp[2][0][0] - prices[3])
        dp[3][1][0] = max(dp[2][1][0], dp[2][0][1] + prices[3])
        dp[3][1][1] = max(dp[2][1][1], dp[2][1][0] - prices[3])
        dp[3][2][0] = max(dp[2][2][0], dp[2][1][1] + prices[3])
        dp[3][2][1] = max(dp[2][2][1], dp[2][2][0] - prices[3])
        dp[3][3][0] = max(dp[2][3][0], dp[2][2][1] + prices[3])
        dp[3][3][1] = max(dp[2][3][1], dp[2][3][0] - prices[3])
        # print(dp[3][0][0], dp[3][0][1], dp[3][1][0], dp[3][1][1], dp[3][2][0], dp[3][2][1], dp[3][3][0], dp[3][3][1])
        print(dp[3][0][0], dp[3][1][0], dp[3][2][0], dp[3][3][0])
        # print(dp[3][0][0], dp[3][1][0], dp[3][2][0], dp[3][3][0])
        print(max(dp[3][0][0], dp[3][1][0], dp[3][2][0], dp[3][3][0]))
        print('------------------------')
        dp[4][0][0] = 0
        dp[4][0][1] = max(dp[3][0][1], dp[3][0][0] - prices[4])
        dp[4][1][0] = max(dp[3][1][0], dp[3][0][1] + prices[4])
        dp[4][1][1] = max(dp[3][1][1], dp[3][1][0] - prices[4])
        dp[4][2][0] = max(dp[3][2][0], dp[3][1][1] + prices[4])
        dp[4][2][1] = max(dp[3][2][1], dp[3][2][0] - prices[4])
        dp[4][3][0] = max(dp[3][3][0], dp[3][2][1] + prices[4])
        dp[4][3][1] = max(dp[3][3][1], dp[3][3][0] - prices[4])
        # print(dp[4][0][0], dp[4][0][1], dp[4][1][0], dp[4][1][1], dp[4][2][0], dp[4][2][1], dp[4][3][0], dp[4][3][1])
        print(dp[4][0][0], dp[4][1][0], dp[4][2][0], dp[4][3][0])
        # print(dp[4][0][0], dp[4][1][0], dp[4][2][0], dp[4][3][0])
        print(max(dp[4][0][0], dp[4][1][0], dp[4][2][0], dp[4][3][0]))
        print('------------------------')
        dp[5][0][0] = 0
        dp[5][0][1] = max(dp[4][0][1], dp[4][0][0] - prices[5])
        dp[5][1][0] = max(dp[4][1][0], dp[4][0][1] + prices[5])
        dp[5][1][1] = max(dp[4][1][1], dp[4][1][0] - prices[5])
        dp[5][2][0] = max(dp[4][2][0], dp[4][1][1] + prices[5])
        dp[5][2][1] = max(dp[4][2][1], dp[4][2][0] - prices[5])
        dp[5][3][0] = max(dp[4][3][0], dp[4][2][1] + prices[5])
        dp[5][3][1] = max(dp[4][3][1], dp[4][3][0] - prices[5])
        # print(dp[5][0][0], dp[5][0][1], dp[5][1][0], dp[5][1][1], dp[5][2][0], dp[5][2][1], dp[5][3][0], dp[5][3][1])
        print(dp[5][0][0], dp[5][1][0], dp[5][2][0], dp[5][3][0])
        # print(dp[l-1][0][0],dp[l-1][1][0],dp[l-1][2][0],dp[l-1][3][0])
        print(max(dp[5][0][0], dp[5][1][0], dp[5][2][0], dp[5][3][0]))
        print('------------------------')
        dp[6][0][0] = 0
        dp[6][0][1] = max(dp[5][0][1], dp[5][0][0] - prices[6])
        dp[6][1][0] = max(dp[5][1][0], dp[5][0][1] + prices[6])
        dp[6][1][1] = max(dp[5][1][1], dp[5][1][0] - prices[6])
        dp[6][2][0] = max(dp[5][2][0], dp[5][1][1] + prices[6])
        dp[6][2][1] = max(dp[5][2][1], dp[5][2][0] - prices[6])
        dp[6][3][0] = max(dp[5][3][0], dp[5][2][1] + prices[6])
        dp[6][3][1] = max(dp[5][3][1], dp[5][3][0] - prices[6])

        # print(dp[6][0][0], dp[6][0][1], dp[6][1][0], dp[6][1][1], dp[6][2][0], dp[6][2][1], dp[6][3][0], dp[6][3][1])
        print(dp[6][0][0], dp[6][1][0], dp[6][2][0], dp[6][3][0])
        # print(dp[l-1][0][0],dp[l-1][1][0],dp[l-1][2][0],dp[l-1][3][0])
        print(max(dp[6][0][0], dp[6][1][0], dp[6][2][0], dp[6][3][0]))

        return max(dp[l-1][0][0],dp[l-1][1][0],dp[l-1][2][0],dp[l-1][3][0])

stock = [2,1,1000,10000,1000,1000,1050] 
s = Solution()
print(s.maxProfit(stock))
