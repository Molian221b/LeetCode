第一题：
# dp[天数][购买状态][卖出次数]
class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        if prices == []:
            return 0

        length = len(prices)
        dp = [[[0 for i in range(2)] for j in range(2)] for k in range(length)]
        dp[0][0][0] = 0
        dp[0][0][1] = float("-inf")
        dp[0][1][0] = -prices[0]
        dp[0][1][1] = float("-inf")

        for i in range(1,length):
            dp[i][0][0] = 0
            dp[i][0][1] = max(dp[i-1][0][1], dp[i-1][1][0] + prices[i])
            dp[i][1][0] = max(dp[i-1][1][0], dp[i-1][0][0] - prices[i])
            dp[i][1][1] = float("-inf")

        return max(dp[length-1][0][0],dp[length-1][0][1])


受启发很大：
https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/solution/tong-su-yi-dong-de-dong-tai-gui-hua-jie-fa-by-marc/
其它参考：https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/solution/yi-ge-tong-yong-fang-fa-tuan-mie-6-dao-gu-piao-wen/
