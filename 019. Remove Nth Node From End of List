Given a linked list, remove the n-th node from the end of list and return its head.
Example:
Given linked list: 1->2->3->4->5, and n = 2.
After removing the second node from the end, the linked list becomes 1->2->3->5.
Note:
Given n will always be valid.
Follow up:
Could you do this in one pass?

# 两次扫描
class Solution:
    def removeNthFromEnd(self, head: ListNode, n: int) -> ListNode:
        count = 0
        temp = head
        while temp:
            count += 1
            temp = temp.next
        num = count - n + 1
        count = 0
        temp = head
        if num == 1:  # 用num判断要去除的节点是不是头节点，这是之前没想到的
            head = temp = temp.next
            # temp = temp.next
            # head = temp
        else:
            while temp:
                count += 1
                if count == num-1:
                    temp.next = temp.next.next
                temp = temp.next
        temp = head                
        return temp
